<?xml version="1.0" encoding="UTF-8"?>
<genmodel:GenModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:genmodel="http://www.eclipse.org/emf/2002/GenModel" modelDirectory="/robostar.robocert/src-gen" creationIcons="false"
    editDirectory="/robostar.robocert.edit/src-gen" editorDirectory="/robostar.robocert.editor/src-gen"
    modelPluginID="robostar.robocert" modelName="RoboChart" rootExtendsClass="org.eclipse.emf.ecore.impl.MinimalEObjectImpl$Container"
    codeFormatting="true" testsDirectory="/robostar.robocert.tests/src-gen" importerID="org.eclipse.emf.importer.ecore"
    complianceLevel="5.0" copyrightFields="false" usedGenPackages="../../circus.robocalc.robochart/model/robochart.genmodel#//robochart"
    operationReflection="true" importOrganizing="true">
  <foreignModel>RoboCert.ecore</foreignModel>
  <genPackages prefix="RoboCert" basePackage="robostar" disposableProviderFactory="true"
      ecorePackage="RoboCert.ecore#/">
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="RoboCert.ecore#//CorePropertyType">
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//CorePropertyType/TIMELOCK_FREE"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//CorePropertyType/DEADLOCK_FREE"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//CorePropertyType/DETERMINISM"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//CorePropertyType/TERMINATION"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="RoboCert.ecore#//Temperature">
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//Temperature/COLD"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//Temperature/HOT"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="RoboCert.ecore#//Synchronicity">
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//Synchronicity/ASYNCHRONOUS"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//Synchronicity/SYNCHRONOUS"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="RoboCert.ecore#//BinarySetOperator">
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//BinarySetOperator/UNION"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//BinarySetOperator/INTERSECTION"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//BinarySetOperator/DIFFERENCE"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="RoboCert.ecore#//SequencePropertyType">
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//SequencePropertyType/HOLDS"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//SequencePropertyType/IS_OBSERVED"/>
    </genEnums>
    <genEnums typeSafeEnumCompatible="false" ecoreEnum="RoboCert.ecore#//SemanticModel">
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//SemanticModel/TIMED"/>
      <genEnumLiterals ecoreEnumLiteral="RoboCert.ecore#//SemanticModel/TRACES"/>
    </genEnums>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//OptionallyNamedElement">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//OptionallyNamedElement/name"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//CertPackage">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//CertPackage/groups"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//CertPackage/rcImports"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Group">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Group/parent"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//SpecificationGroup">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//SpecificationGroup/target"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//SpecificationGroup/assignments"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//SpecificationGroup/messageSets"/>
      <genFeatures property="Readonly" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//SpecificationGroup/actors"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//SpecificationGroup/interactions"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Target">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Target/group"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//HasModuleTarget">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//HasModuleTarget/module"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//HasControllerTarget">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//HasControllerTarget/controller"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//ComponentTarget"/>
    <genClasses ecoreClass="RoboCert.ecore#//ModuleTarget">
      <genOperations ecoreOperation="RoboCert.ecore#//ModuleTarget/toString" body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;return &quot;module &quot; + getModule().getName();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//ControllerTarget">
      <genOperations ecoreOperation="RoboCert.ecore#//ControllerTarget/toString" body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;return &quot;controller &quot; + getController().getName();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//StateMachineTarget">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//StateMachineTarget/stateMachine"/>
      <genOperations ecoreOperation="RoboCert.ecore#//StateMachineTarget/toString"
          body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;return &quot;state machine &quot; + getStateMachine().getName();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//OperationTarget">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//OperationTarget/operation"/>
      <genOperations ecoreOperation="RoboCert.ecore#//OperationTarget/toString" body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;return &quot;operation &quot; + getOperation().getName();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//CollectionTarget"/>
    <genClasses ecoreClass="RoboCert.ecore#//InModuleTarget">
      <genOperations ecoreOperation="RoboCert.ecore#//InModuleTarget/toString" body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;return &quot;components of module &quot; + getModule().getName();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//InControllerTarget">
      <genOperations ecoreOperation="RoboCert.ecore#//InControllerTarget/toString"
          body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;return &quot;components of controller &quot; + getController().getName();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//ConstAssignment">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ConstAssignment/constants"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ConstAssignment/value"/>
      <genOperations ecoreOperation="RoboCert.ecore#//ConstAssignment/hasConstant"
          body="return constants.stream().anyMatch(other -> constant == other);">
        <genParameters ecoreParameter="RoboCert.ecore#//ConstAssignment/hasConstant/constant"/>
      </genOperations>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//AssertionGroup">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//AssertionGroup/assertions"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//Assertion">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Assertion/group"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Assertion/property"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Property">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//Property/negated"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//CoreProperty">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//CoreProperty/group"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//CoreProperty/type"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//ValueSpecification"/>
    <genClasses ecoreClass="RoboCert.ecore#//ExpressionValueSpecification">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ExpressionValueSpecification/expr"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//WildcardValueSpecification">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//WildcardValueSpecification/destination"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//Interaction">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Interaction/group"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Interaction/lifelines"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Interaction/fragments"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//Lifeline">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Lifeline/parent"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Lifeline/actor"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Lifeline/variables"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//InteractionFragment"/>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//TimeFragment">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//TimeFragment/actor"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//TimeFragment/units"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//WaitFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//MessageFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//MessageFragment/message"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//MessageFragment/temperature"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//CombinedFragment"/>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//BlockFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//BlockFragment/body"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//OptFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//DeadlineFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//LoopFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//LoopFragment/bound"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//SequentialFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//AnyFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//AnyFragment/allowed"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//UntilFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//UntilFragment/trigger"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//AnyUntilFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//AnyUntilFragment/body"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//DoUntilFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//TimeoutFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//TimeoutFragment/trigger"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//DiscreteBound">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//DiscreteBound/lower"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//DiscreteBound/upper"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//BranchFragment">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//BranchFragment/branches"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//AltFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//XAltFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//ParFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//StrictFragment"/>
    <genClasses ecoreClass="RoboCert.ecore#//InteractionOperand">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//InteractionOperand/guard"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//InteractionOperand/fragments"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Guard">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Guard/parent"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//EmptyGuard"/>
    <genClasses ecoreClass="RoboCert.ecore#//ExprGuard">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ExprGuard/expr"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//ElseGuard"/>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Message">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Message/topic"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Message/arguments"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Message/from"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//Message/to"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//Message/synchronicity"/>
      <genFeatures property="Readonly" createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//Message/outbound"
          get="return getFrom().isWorld() || getTo().isWorld();"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Endpoint">
      <genFeatures property="Readonly" createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//Endpoint/world"
          get="return this instanceof robostar.robocert.World;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//ActorEndpoint">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ActorEndpoint/actor"/>
      <genOperations ecoreOperation="RoboCert.ecore#//ActorEndpoint/toString" body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;var actor = getActor();&#xD;&#xA;&#x9;&#x9;if (actor == null) return &quot;(null actor)&quot;;&#xD;&#xA;&#x9;&#x9;return actor.toString();&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//World">
      <genOperations ecoreOperation="RoboCert.ecore#//World/toString" body="return &quot;&lt;&lt;world>>&quot;;"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//MessageTopic">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//MessageTopic/message"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//EventTopic">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//EventTopic/efrom"/>
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//EventTopic/eto"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//OperationTopic">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//OperationTopic/operation"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//NamedMessageSet">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//NamedMessageSet/group"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//NamedMessageSet/set"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//MessageSet"/>
    <genClasses ecoreClass="RoboCert.ecore#//RefMessageSet">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//RefMessageSet/set"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//ExtensionalMessageSet">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ExtensionalMessageSet/messages"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//UniverseMessageSet"/>
    <genClasses ecoreClass="RoboCert.ecore#//BinaryMessageSet">
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//BinaryMessageSet/lhs"/>
      <genFeatures property="None" children="true" createChild="true" ecoreFeature="ecore:EReference RoboCert.ecore#//BinaryMessageSet/rhs"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//BinaryMessageSet/operator"/>
    </genClasses>
    <genClasses image="false" ecoreClass="RoboCert.ecore#//Actor">
      <genFeatures property="None" notify="false" createChild="false" ecoreFeature="ecore:EReference RoboCert.ecore#//Actor/group"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//TargetActor">
      <genOperations ecoreOperation="RoboCert.ecore#//TargetActor/toString" body="&#xD;&#xA;&#x9;&#x9;if (eIsProxy()) return super.toString();&#xD;&#xA;&#x9;&#x9;var name = getName();&#xD;&#xA;&#x9;&#x9;if (name == null || name.isEmpty()) name = &quot;(untitled)&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&lt;&lt;target>> &quot; + name;&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//ComponentActor">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//ComponentActor/node"/>
      <genOperations ecoreOperation="RoboCert.ecore#//ComponentActor/toString" body="&#xD;&#xA;&#x9;&#x9;var name = getName();&#xD;&#xA;&#x9;&#x9;if (name == null || name.isEmpty()) name = &quot;(untitled)&quot;;&#xD;&#xA;&#x9;&#x9;return &quot;&lt;&lt;component>> %s: %s&quot;.formatted(name, getNode());&#xD;&#xA;&#x9;"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//SequenceProperty">
      <genFeatures notify="false" createChild="false" propertySortChoices="true" ecoreFeature="ecore:EReference RoboCert.ecore#//SequenceProperty/interaction"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//SequenceProperty/type"/>
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//SequenceProperty/model"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//CSPGroup">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//CSPGroup/csp"/>
    </genClasses>
    <genClasses ecoreClass="RoboCert.ecore#//CSPProperty">
      <genFeatures createChild="false" ecoreFeature="ecore:EAttribute RoboCert.ecore#//CSPProperty/csp"/>
    </genClasses>
  </genPackages>
</genmodel:GenModel>
